---
# tasks file for golang
- name: yum install git needed for golang
  become: yes
  yum:
    name: git
    state: latest

- name: yum install glibc.i686 needed for golang
  become: yes
  yum: 
    name:  glibc.i686
    state: latest 

- name: is golang installed?
  stat: path=/usr/local/go
  register: go_installed

- name: download and install golang binary release
  become: yes
  block:
    - command: /bin/bash -c "wget https://dl.google.com/go/go{{ golang_version }}.linux-386.tar.gz"
      args:
        chdir: /tmp

    - unarchive:
        src: "/tmp/go{{ golang_version }}.linux-386.tar.gz"
        dest: /usr/local
  when: go_installed.stat.exists == False 

- name: ensure /etc/profile.d/path.sh exists
  become: yes   
  file:
    path: /etc/profile.d/path.sh
    state: touch

- name: ensure /etc/profile.d/path.sh contains golang bin path
  become: yes
  lineinfile:
    path: /etc/profile.d/path.sh
    regexp: "^export PATH=$PATH:/usr/local/go/bin"
    line: "export PATH=$PATH:/usr/local/go/bin"

- name: checking golang project folders
  file:
    path: /home/{{ ansible_user_id }}/go/{{ item }}
    state: directory
    mode: 0775
  with_items:
    - bin
    - pkg
    - src

- name: ensure /home/{{ ansible_user_id }}/.bash_profile exists
  file:
    path: /home/vagrant/.bash_profile
    state: touch
    mode: 0644
    
# TODO: This needs to TLC
- name: ensure /home/{{ ansible_user_id }}/.bash_profile defines GOBIN and GOPATH environment variables
  lineinfile:
    path: /home/{{ ansible_user_id }}/.bash_profile
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^export GOBIN", line: 'export GOBIN="$HOME/go/bin"' }
    - { regexp: "^export GOPATH", line: 'export GOPATH="$HOME/go"' }
    - { regexp: '^export PATH="$PATH:$GOBIN', line: 'export PATH="$PATH:$GOBIN"' }