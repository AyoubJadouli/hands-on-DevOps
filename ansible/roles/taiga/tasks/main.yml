---
# tasks file for taiga

# Copyright (C) 2019 Michael Joseph Walsh - All Rights Reserved
# You may use, distribute and modify this code under the
# terms of the the license.
#
# You should have received a copy of the license with
# this file. If not, please email <mjwalsh@nemonik.com>

- name: pull python:3.6 docker image
  docker_image:
    name: python:3.6
    source: pull
    timeout: "{{ docker_timeout }}"
  retries: "{{ docker_retries }}"
  delay: "{{ docker_delay }}"
  register: result
  until: result is succeeded
  tags:
    - taiga

- name: copy to taiga files to /home/{{ ansible_user_id }}/taiga
  copy:
    src: files/
    dest: /home/{{ ansible_user_id }}/taiga
  tags:
    - taiga

- name: template files into /home/{{ ansible_user_id }}/taiga
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    force: yes 
  with_items:
    - { src: "templates/README.MD.j2", dest: "/home/{{ ansible_user_id }}/taiga/README.MD" }
    - { src: "templates/Dockerfile.j2", dest: "/home/{{ ansible_user_id }}/taiga/Dockerfile" }
    - { src: "templates/dockerfile_build.sh.j2", dest: "/home/{{ ansible_user_id }}/taiga/dockerfile_build.sh" }
  tags:
    - taiga

- name: make /home/{{ ansible_user_id }}/taiga/dockerfile_build.sh executable
  file: 
    path: /home/{{ ansible_user_id }}/taiga/dockerfile_build.sh
    mode: "u=rwx,g=r,o=r"  
  tags:
    - taiga

- name: build nemonik/taiga:{{ taiga_version }} docker image
  docker_image:
    path: /home/{{ ansible_user_id }}/taiga
    name: nemonik/taiga:{{ taiga_version }}
    build:
      args:
        http_proxy: "{{ http_proxy|default('') }}"
        HTTP_PROXY: "{{ http_proxy|default('') }}"
        https_proxy: "{{ https_proxy|default('') }}"
        HTTPS_PROXY: "{{ https_proxy|default('') }}"
        NO_PROXY: "{{ no_proxy|default('') }}"
        no_proxy: "{{ no_proxy|default('') }}" 
  retries: "{{ docker_retries }}"
  delay: "{{ docker_delay }}"
  register: result
  until: result is succeeded
  tags:
   - taiga

- name: fail if taiga_deploy_via is not set to either 'docker-compose' or 'kubectl'
  fail:
    msg: taiga_deploy_via must be set to either 'kubectl' or 'docker-compose'.
  when: taiga_deploy_via is undefined or ( taiga_deploy_via != "docker-compose" and taiga_deploy_via != "kubectl" )
  tags:
    - taiga

- name: spin up taiga via docker-compose
  block:
  - name: template docker-compose.yml into /home/{{ ansible_user_id }}/taiga
    template:
      src: templates/docker-compose.yml.j2
      dest: /home/{{ ansible_user_id }}/taiga/docker-compose.yml
      force: yes

  - name: ensure user 'default' with a 1001 uid and a primary group of 'ROOT' exists
    become: yes
    user:
      name: default
      uid: 1001
      group: root

  - name: ensure ./volumes exist
    become: yes
    file:
      path: "{{ item.path }}"
      state: directory
      owner: "{{ item.owner }}"
      group: "{{ item.group }}"
    with_items:
      - { path: "/home/{{ ansible_user_id }}/taiga/volumes/static/" , owner: root, group: root }
      - { path: "/home/{{ ansible_user_id }}/taiga/volumes/static/admin", owner: default, group: root }
      - { path: "/home/{{ ansible_user_id }}/taiga/volumes/media/", owner: root, group: root }
      - { path: "/home/{{ ansible_user_id }}/taiga/volumes/media/user", owner: default, group: root }

  - name: spin up via docker-compose
    docker_compose:
      build: no
      debug: yes
      project_src: /home/{{ ansible_user_id }}/taiga
  when: gitlab_deploy_via == "docker-compose"
  tags:
    - taiga

- name: spin up Taiga via Kubernetes
  block:
  - name: template taiga.yml into /home/{{ ansible_user_id }}/taiga
    template:
      src: templates/taiga.yml.j2
      dest: /home/{{ ansible_user_id }}/taiga/taiga.yml
      force: yes

  - name: spin up via kubectl
    shell: kubectl --kubeconfig=/home/{{ ansible_user_id }}/kubeconfig.yml apply -f taiga.yml
    args:
      chdir: /home/{{ ansible_user_id }}/taiga
  when: gitlab_deploy_via == "kubectl"
  tags:
    - taiga
