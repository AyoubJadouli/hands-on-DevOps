---
# tasks file for openshift

# Copyright (C) 2018 Michael Joseph Walsh - All Rights Reserved
# You may use, distribute and modify this code under the
# terms of the the license.
#
# You should have received a copy of the license with
# this file. If not, please email <mjwalsh@nemonik.com>

- name: check if openshift exists
  become: yes  
  stat:
    path: "/home/{{ ansible_user_id }}/openshift"
  register: openshift
  tags:
    - openshift

- name: ensure /home/{{ ansible_user_id }}/openshift exists
  become: yes  
  file:
    path: "/home/{{ ansible_user_id }}/openshift"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
  tags:
    - openshift

- name: download and unpack openshift origin server tools
  become: yes  
  unarchive:
    src: "https://github.com/openshift/origin/releases/download/{{ openshift_origin_server_tools_version }}.tar.gz"
    dest: "/home/{{ ansible_user_id }}/openshift"
    # exclude:
    #   - README.md
    #   - LICENSE
    remote_src: yes
    extra_opts: [--strip-components=1]
  when: openshift.stat.exists == False  
  tags:
    - openshift

# - name: is oc cluster up running
#   become: yes 
#   shell: echo -n $(pgrep openshift)
#   register: oc_cluster_up_procs
#   tags:
#     - openshift

# - name: ensure openshift development cluster is running
#   become: yes 
#   shell: "cd /home/{{ ansible_user_id }}/openshift; nohup ./openshift start --master='{{ hostvars['toolchain']['ansible_host'] }}' </dev/null >/dev/null 2>&1 &"
#   when: oc_cluster_up_procs.stdout == ""
#   tags:
#     - openshift

# sudo /usr/local/bin/oc login -u system:admin -n default --config=/usr/local/bin/openshift.local.config/master/admin.kubeconfig
# export KUBECONFIG="$(pwd)"/openshift.local.config/master/admin.kubeconfig
# export CURL_CA_BUNDLE="$(pwd)"/openshift.local.config/master/ca.crt
# /usr/local/bin/oc describe dc router
# echo '{"kind":"ServiceAccount","apiVersion":"v1","metadata":{"name":"router"}}' | /usr/local/bin/oc create -f -
# /usr/local/bin/oc adm policy add-scc-to-user hostnetwork -z router
# /usr/local/bin/oc adm policy add-cluster-role-to-user system:router system:serviceaccount:default:router
# /usr/local/bin/oc adm router --service-account=router
# /usr/local/bin/oc describe dc router




# oc login https://192.168.0.11:8443 --insecure-skip-tls-verify=true
# oc login --certificate-authority="$(pwd)"/openshift.local.config/master/ca.crt -u test
# oc new-project test --display-name="Test Project" --description="This is a test project"


# oc adm policy add-cluster-role-to-user cluster-admin test --config="$(pwd)"/openshift.local.config/master/admin.kubeconfig









# export http_proxy=172.30.1.1,$http_proxy
# export HTTP_PROXY=172.30.1.1,$HTTP_PROXY
# export https_proxy=172.30.1.1,$https_proxy
# export HTTPS_PROXT=172.30.1.1,$HTTPS_PROXY
# ./oc cluster up --public-hostname='192.168.0.11'